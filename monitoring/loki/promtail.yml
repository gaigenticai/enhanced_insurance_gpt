# Promtail Configuration - Production Ready
# Log shipping agent for Insurance AI Agent System

# Server configuration
server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

# Client configuration
clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: ""
    batchwait: 1s
    batchsize: 1048576
    timeout: 10s
    backoff_config:
      min_period: 500ms
      max_period: 5m
      max_retries: 10
    external_labels:
      environment: production
      cluster: insurance-ai

# Positions configuration
positions:
  filename: /tmp/positions.yaml

# Scrape configurations
scrape_configs:
  # Application logs
  - job_name: insurance-ai-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: insurance-ai-backend
          service: backend
          __path__: /var/log/insurance-ai/backend/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            module: module
            request_id: request_id
            user_id: user_id
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          module:
          service:
      - output:
          source: message

  - job_name: insurance-ai-frontend
    static_configs:
      - targets:
          - localhost
        labels:
          job: insurance-ai-frontend
          service: frontend
          __path__: /var/log/insurance-ai/frontend/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            component: component
            user_id: user_id
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          component:
          service:
      - output:
          source: message

  # AI Agent logs
  - job_name: ai-agents
    static_configs:
      - targets:
          - localhost
        labels:
          job: ai-agents
          service: agents
          __path__: /var/log/insurance-ai/agents/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            agent_name: agent_name
            operation: operation
            duration: duration
            success: success
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          agent_name:
          operation:
          service:
      - output:
          source: message

  # Database logs
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          service: database
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+):\s+(?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000 MST'
      - labels:
          level:
          service:
      - output:
          source: message

  # Redis logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: cache
          __path__: /var/log/redis/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):(?P<role>\w+) (?P<timestamp>\d{2} \w{3} \d{4} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>\w+) (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '02 Jan 2006 15:04:05.000'
      - labels:
          level:
          role:
          service:
      - output:
          source: message

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          service: nginx
          log_type: access
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+) - (?P<remote_user>\S+) \[(?P<timestamp>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)" "(?P<http_x_forwarded_for>[^"]*)"'
      - timestamp:
          source: timestamp
          format: '02/Jan/2006:15:04:05 -0700'
      - labels:
          method:
          status:
          service:
          log_type:
      - output:
          source: message

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          service: nginx
          log_type: error
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<pid>\d+)#(?P<tid>\d+): (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '2006/01/02 15:04:05'
      - labels:
          level:
          service:
          log_type:
      - output:
          source: message

  # Docker container logs
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)' 
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging_jobname']
        target_label: 'job'
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            time: time
      - timestamp:
          source: time
          format: RFC3339Nano
      - output:
          source: output

  # System logs
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          service: system
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3} \d{1,2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<service>\S+)(\[(?P<pid>\d+)\])?: (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: 'Jan 2 15:04:05'
      - labels:
          hostname:
          service:
      - output:
          source: message

  # Audit logs
  - job_name: audit-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: audit-logs
          service: audit
          __path__: /var/log/insurance-ai/audit/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            user_id: user_id
            action: action
            resource: resource
            result: result
            ip_address: ip_address
            user_agent: user_agent
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          action:
          result:
          service:
      - output:
          source: message

  # Security logs
  - job_name: security-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: security-logs
          service: security
          __path__: /var/log/insurance-ai/security/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            event_type: event_type
            severity: severity
            source_ip: source_ip
            target: target
            description: description
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          event_type:
          severity:
          service:
      - output:
          source: description

# Target configuration
target_config:
  sync_period: 10s

